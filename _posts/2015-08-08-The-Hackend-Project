---
layout: post
title: The Hackend Project
---

If there was ever a specific reason I started this blog, this is it.

##What?
**The Hackend Project** is a simple concept - Every weekend pick a technology that you are not familiar with or a topic that you'd want to explore, and try to learn as much about it in a span of two days; and after the weekend you write a blog talking about what you learnt, and how others can go about learning the same thing if they wanted to. It's as simple as that! As of now the Hackend Project is more of a personal thing, but soon I hope to build a community of like minded people who'd like to learn and share their experiences. The benefit is two fold -
* I'll be experimenting and learning something different every week and sharing that with the community.
* The community will keep me going longer and I can build upon what others have tried and shared on their blog.
As an added **bonus**, I'll be networking with brilliant folk, and maybe also find some neat opensource projects or ideas to work on. (If I've not already mentioned - I `love` working on opensource technologies). The *only* rule is that I will be selecting CS related topics only.

##Why?
I recently just graduated from college and got hired by an [amazing company](http://www.nutanix.com/) where I work on core CS stuff such as distributed systems, datacenter networking, virtualization and cloud computing. As simple as that. As a student, I had a lot of free time to experiment with technology, try out new things and push them off as "mini-projects". But one thing I have realized is that the industry environment is **very** different from your everyday academic setting. You no longer have the free time to experiment on whatever you want with your friends. At work, along with the opportunity to work on real live scale systems comes the responsibility to meet deadlines and product goals. You stick one "tech stack" at work, and get comfortable at it. The Hackend Project gives me the freedom and opportunity to learn things that don't fall into the spectrum of work. It could be anything for understanding python internals to understanding how a real-time kernel works or trying out a new frontend MVC framework. 
